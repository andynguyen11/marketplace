# -*- coding: utf-8 -*-
# Generated by Django 1.9.4 on 2017-01-20 03:53
from __future__ import unicode_literals

from django.db import migrations, models
from django.contrib.contenttypes.models import ContentType
from django.db.models import F
from postman.serializers import free_messages
from notifications.signals import notify
from postman.models import Message
from notifications.models import Notification


def passed_limit(thread, user):
    return (thread.job.status == 'pending') and not free_messages(thread, user)['remaining']


def notify_unread(apps, schema_editor):
    content_type = ContentType.objects.get_for_model(Message)
    for thread in Message.objects.filter(interaction_ptr_id=F('interaction_ptr__thread_id')):
        users = [thread.job.contractor, thread.job.owner]
        for [user, recipient] in [users, [users[1], users[0]]]:
            if passed_limit(thread, user):
                try:
                    Notification.objects.get(
                            action_object_object_id=thread.id,
                            action_object_content_type=content_type,
                            recipient=user,
                            data={"type":'messageLimitReached'})
                except Notification.DoesNotExist:
                    notify.send(
                        recipient,
                        recipient=user,
                        verb=u'message limit reached for',
                        action_object=thread,
                        target=thread.project,
                        type=u'messageLimitReached')


class Migration(migrations.Migration):

    dependencies = [
        ('postman', '0020_auto_20161005_1919'),
    ]

    operations = [
        migrations.RunPython(notify_unread)
    ]
